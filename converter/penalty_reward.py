from typing import Tuple
from lsp_types import AggregatorType
from error import AggregatorTypeNotExistError

Weight1 = [ 3.13, 4, 5, 6.15, 7.5, 9.09, 11, 13.3, 16.3, 20, 25, 32, 42.5, 60,
            5.88, 7.5, 9.33, 11.4, 13.8, 16.7, 20, 24, 28.9, 35, 42.9, 53.3, 68,
            8.33, 10.6, 13.1, 16, 19.3, 23.1, 27.5, 32.7, 39, 46.7, 56.3, 68.6,
            10.5, 13.3, 16.5, 20, 24, 28.6, 33.8, 40, 47.3, 56, 66.7,
            12.5, 15.8, 19.4, 23.5, 28.1, 33.3, 39.3, 46.2, 54.2, 63.6,
            14.3, 18, 22.1, 26.7, 31.8, 37.5, 44, 51.4, 60,
            15.9, 20, 24.5, 29.5, 35, 41.2, 48.1, 56,
            17.4, 21.8, 26.7, 32, 37.9, 44.4, 51.8,
            18.8, 23.5, 28.6, 34.3, 40.5, 47.4,
            20, 25, 30.4, 36.4, 42.9,
            21.2, 26.4, 32.1, 38.3,
            22.2, 27.7, 33.6,
            23.2, 28.9,
            24.1 ]

Weight2 = [ 90.3, 90.3, 90.2, 90.2, 90.1, 90, 89.9, 89.7, 89.6, 89.3, 88.9, 88.2, 87, 83.3,
            81.3, 81.1, 80.9, 80.6, 80.4, 80, 79.5, 78.9, 78.1, 76.9, 75, 71.4, 62.5,
            72.7, 72.4, 71.9, 71.4, 70.8, 70, 69, 67.6, 65.6, 62.5, 57.1, 45.5,
            64.7, 64.1, 63.4, 62.5, 61.4, 60, 58.1, 55.6, 51.7, 45.5, 33.3,
            57.1, 56.3, 55.2, 53.8, 52.2, 50, 47.1, 42.9, 36.4, 25,
            50, 48.8, 47.3, 45.5, 43.1, 40, 35.7, 29.4, 19.2,
            43.2, 41.7, 39.7, 37.3, 34.2, 30, 24.1, 15.2,
            36.8, 34.9, 32.5, 29.4, 25.4, 20, 12.2,
            30.8, 28.4, 25.5, 21.7, 16.8, 10,
            25, 22.2, 18.8, 14.3, 8.33,
            19.5, 16.3, 12.3, 7.04,
            14.3, 10.6, 6.02,
            9.3, 5.21,
            4.55 ]

CPAPenalty = [  75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10,
                75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15,
                75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20,
                75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25,
                75, 70, 65, 60, 55, 50, 45, 40, 35, 30,
                75, 70, 65, 60, 55, 50, 45, 40, 35,
                75, 70, 65, 60, 55, 50, 45, 40,
                75, 70, 65, 60, 55, 50, 45,
                75, 70, 65, 60, 55, 50,
                75, 70, 65, 60, 55,
                75, 70, 65, 60,
                75, 70, 65,
                75, 70,
                75 ]

CPAReward = [   5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
                30, 30, 30, 30, 30, 30, 30, 30, 30,
                35, 35, 35, 35, 35, 35, 35, 35,
                40, 40, 40, 40, 40, 40, 40,
                45, 45, 45, 45, 45, 45,
                50, 50, 50, 50, 50,
                55, 55, 55, 55,
                60, 60, 60,
                65, 65,
                70 ]

DPAReward = CPAPenalty
DPAPenalty = CPAReward

class PenaltyReward:
    def __init__(self):
        self.cpa = [(CPAPenalty[i], CPAReward[i], Weight1[i], Weight2[i]) for i in range(0, len(CPAPenalty))]
        self.dpa = [(DPAPenalty[i], DPAReward[i], Weight1[i], Weight2[i]) for i in range(0, len(DPAPenalty))]
    def search(self, penalty: float, reward: float, aggregatorType: str) -> Tuple[float, float]:
        penalty *= 100
        reward *= 100
        minErr = 200
        w1, w2 = 0.0, 0.0
        target = None
        if aggregatorType == AggregatorType.CPA:
            target = self.cpa
        elif aggregatorType == AggregatorType.DPA:
            target = self.dpa
        for item in target:
            err = abs(penalty - item[0]) + abs(reward - item[1])
            if err < minErr:
                minErr = err
                w1 = item[2]
                w2 = item[3]
        return w1 / 100, w2 / 100